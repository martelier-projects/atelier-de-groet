/*
 * Gaps.
 * The space between elements.
 */
$gaps: (
  1: rem(4),
  2: rem(8),
  3: rem(12),
  4: rem(16),
  5: rem(20),
  6: rem(24),
  7: rem(28),
  8: rem(32),
  9: rem(36),
  10: rem(48),
  11: rem(60),
  12: rem(72),
  13: rem(96),
  14: rem(120),
);

@function gap($size) {
  @return map-get($gaps, $size);
}

/*
 * Constrains.
 * The maximum size of elements.
 */
$constrains: (
  tiny: rem(450),
  small: rem(660),
  small-medium: rem(750),
  medium: rem(940),
  medium-large: rem(1035),
  large: rem(1275),
);
@function constrain($size) {
  @return map-get($constrains, $size);
}
@mixin constrain($size) {
  max-width: constrain($size);
}

/*
 * Block.
 */
@mixin block($size: large) {
  margin-right: auto;
  margin-left: auto;
  padding-right: gap(4);
  padding-left: gap(4);
  @include bp-min(small) {
    padding-right: cap(6);
    padding-left: cap(6);

    @if ($size != full) {
      max-width: calc(#{constrain($size)} + 6vw + 4rem);
    }
  }
  @include bp-min(medium) {
    padding-right: gap(11);
    padding-left: gap(11);
  }

  .no-csscalc &,
  .no-cssvwunit & {
    max-width: constrain($size);
  }
}

/*
 * Row.
 */
$row-margins: (
  small: 1.5vw,
  medium: 3vw,
  large: 6vw,
  huge: 7.5vw,
);
@mixin row-top($size: medium) {
  margin-top: calc(#{map-get($row-margins, $size)} + 2rem);
}
@mixin row-bottom($size: medium) {
  margin-bottom: calc(#{map-get($row-margins, $size)} + 2rem);
}
@mixin row($size: medium) {
  @include row-top($size);
  @include row-bottom($size);
}

/*
 * Z-index
 * Usage: z-index: z(skiplink);
 */
$z-index: (
  skiplink: 10000,
  cookie-dialog: 999,
  project-header-content: 10,
  pull-back: -1,
  site-nav: 30,
  site-nav-overlay: 0,
  overlay: 1,
  video-play-button: 2,
);
